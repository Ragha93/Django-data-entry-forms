# Generated by Django 3.0.3 on 2020-04-10 07:29

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Wts_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asin', models.CharField(max_length=10, unique=True, validators=[django.core.validators.MinLengthValidator(10)], verbose_name='ASIN')),
                ('vendorCode', models.CharField(max_length=10, null=True, verbose_name='VendorCode')),
                ('Asinsitestatus', models.CharField(blank=True, max_length=1000, null=True, verbose_name='SiteStatus')),
                ('asinsearchable', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='The ASIN is searchable in customer search bar.(If not, open up a Buyability Troubleshooting task for the ASIN)')),
                ('comment1', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinretailcontribution', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Does the ASIN having Retail Contribution?(If the ASIN doesn’t have retail contribution then don’t proceed for further audit)')),
                ('comment2', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinobsolete', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Does the ASIN is Obselete? (If the ASIN is Obselete then don’t proceed for further audit)')),
                ('comment3', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asincurrentcategory', models.CharField(blank=True, max_length=1000, null=True, verbose_name='asinspecific')),
                ('asincorrectcategory', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Does vendor product appear under correct category?')),
                ('comment4', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('item_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Title')),
                ('asinreflectproduct', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Does the title correctly reflect the product on the detail page?')),
                ('comment5', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinnomismatchbtwnattributes', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='There is no mismatch between related attributes (Brand Name, Color, Unit Count and Number of Items)')),
                ('comment6', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asintitleguideline', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Title fits the general guideline of: Brand Name – Model no/style no – Product Type- Variation attributes (Size, Color, Pattern, & Hand orientation)?')),
                ('comment7', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinmainimage', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='ASIN has main image')),
                ('comment8', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinmainimagewhitebg', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Main image has a white background?')),
                ('comment9', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinimageborderwatermanrtextcheck', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='The main image does not have Borders, watermarks, text, or other decorations?')),
                ('comment10', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinimagematchtitle', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Images match what the title says the item is')),
                ('comment11', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinimagematchcolorsize', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Is the image consistent with product color and pack size?')),
                ('comment12', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinimageplaceholdercheck', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='There are no Image place holders for images? (with text such as temporary image or no image available)')),
                ('comment13', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinimagegraphratings', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Images do not contain graphs of product ratings')),
                ('comment14', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinimagepromotextcheck', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Image does not have any Promotional text such as sale or free ship')),
                ('comment15', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinimagecustomerdepict', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Do the images depict what a customer would expect to receive if they made a purchase? [Other products, items or accessories that are not part of the product listing; only include exactly what the customer is buying]')),
                ('comment16', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('brand_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Brandname')),
                ('asinbrandnamecorrect', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name="Is the brand name accurate/correct?  (Check 'verified brand' from Bonsai)")),
                ('comment17', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinbrandhyperlink', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Does the Brand hyperlink link to an Amazon Brand Store or a search result page pre-populated with the brand’s ASINs')),
                ('comment18', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('bullet_point1', models.CharField(blank=True, max_length=1000, null=True, verbose_name='BulletPoint1')),
                ('bullet_point2', models.CharField(blank=True, max_length=1000, null=True, verbose_name='BulletPoint2')),
                ('bullet_point3', models.CharField(blank=True, max_length=1000, null=True, verbose_name='BulletPoint3')),
                ('bullet_point4', models.CharField(blank=True, max_length=1000, null=True, verbose_name='BulletPoint4')),
                ('bullet_point5', models.CharField(blank=True, max_length=1000, null=True, verbose_name='BulletPoint5')),
                ('bullet_point6', models.CharField(blank=True, max_length=1000, null=True, verbose_name='BulletPoint6')),
                ('bullet_point7', models.CharField(blank=True, max_length=1000, null=True, verbose_name='BulletPoint7')),
                ('bullet_point8', models.CharField(blank=True, max_length=1000, null=True, verbose_name='BulletPoint8')),
                ('asinbulltpointrelevant', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Is the content relevant to the ASIN?')),
                ('comment19', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinbulletwarrantyinfo', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Does the Bullets Include Warranty info if applicable')),
                ('comment20', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinbulletshort', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Is the bullet point Short Crisp; no vague statements')),
                ('comment21', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinbulletnumerals', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Are Numbers written as numerals (1, 2, 3, etc.)?')),
                ('comment22', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinsitemsg', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Sitemessage')),
                ('asinreleasedate1', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Product does not advertise a generic or future release date, but indicates that it is currently buyable.')),
                ('comment23', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinvariationcheck', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Variations are appropriate to the parent ASIN and not separate products all together. ')),
                ('comment24', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('color_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Color Name')),
                ('asincolorname', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Color name is correct and has the same name as the correct child ASIN. ')),
                ('comment25', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('size_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Size Name')),
                ('asinsizecheck', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Size is correct and spelled correctly. Ex: SMALL\xa0')),
                ('comment27', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinnotorphan', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='ASIN is not an orphan ASIN')),
                ('comment28', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinsiteadescstatus', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='AsinA+status')),
                ('comment29', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinapluscontent', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Does the product have A+ Content?')),
                ('comment30', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinrelevantproduct', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='A+ content is relevant to the product')),
                ('comment31', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinappropriate', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='Product is not inappropriate')),
                ('comment32', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asin_subject_keywords', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Keywords')),
                ('asinkeyword', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='There are keywords for this ASIN. (if no, add some)')),
                ('comment33', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinvariationword', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='There are not multiple variations of the same word (example: with different spelling)')),
                ('comment34', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinleafnode', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=1000, null=True, verbose_name='ASIN has a leaf node')),
                ('comment35', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinhastitle', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment36', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asintitleduplicatewords', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment37', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asintitlesymbol', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment38', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asintitlecasing', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment39', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinimagehighresolution', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment40', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinbrandname', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment41', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinbrandnametitleimagematch', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment42', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinbulletcheck', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment43', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinspellinggrammar', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment44', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinmeasurements', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment45', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinbulletplaceholder', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment46', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinbulletduplicate', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment47', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinexternalsitelink', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment48', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asincompetetiors', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment49', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinhtmlcode', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment50', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinbulletbegin', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment51', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asincontactinfo', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment52', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinpromomaterial', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment53', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinshippinginfo', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment54', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinbulletsymbols', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment55', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinproduct_description', models.CharField(blank=True, max_length=1000, null=True, verbose_name='ProductDescription')),
                ('asinproductdesciptioncheck', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment56', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinproddesclesscharc', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment57', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinproddescmorecharac', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment58', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinproductdescsymbols', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment59', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('asinproductdescpcontactinfo', models.CharField(choices=[('Error', 'Error'), ('No Error', 'No Error')], max_length=10)),
                ('comment60', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comment')),
                ('allocatedto', models.CharField(max_length=1000, null=True, verbose_name='Allocated User')),
                ('allocationdate', models.DateTimeField(default=datetime.datetime(2020, 4, 10, 7, 29, 28, 268126, tzinfo=utc), max_length=1000, verbose_name='Allocated Date')),
            ],
        ),
        migrations.CreateModel(
            name='Userprofileinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Teamname', models.CharField(max_length=30)),
                ('date', models.DateTimeField(default=datetime.datetime(2020, 4, 10, 12, 59, 28, 266132), null=True)),
                ('timenow', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mytimein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime(2020, 4, 10, 12, 59, 28, 267129), null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userloggedin', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
